{"version":3,"file":"main.db90ff7cd1f0f11104ad.bundle.js","sources":["webpack:///./src/app/app.service.ts","webpack:///./src/app/environment.ts","webpack:///./src/app/home/index.ts","webpack:///./src/app/no-content/index.ts","webpack:///./src async","webpack:///./src/app/index.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.resolver.ts","webpack:///./src/app/app.routes.ts","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/home/title/index.ts","webpack:///./src/app/home/title/title.service.ts","webpack:///./src/app/home/x-large/index.ts","webpack:///./src/app/home/x-large/x-large.directive.ts","webpack:///./src/app/no-content/no-content.component.ts","webpack:///./src/main.browser.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/home/home.component.css","webpack:///./src/styles/headings.css","webpack:///./src/styles/styles.scss","webpack:///./src/app/home/home.component.html","webpack:///./src/app/app.component.css?e3a3","webpack:///./src/app/home/home.component.css?5810"],"sourcesContent":["import { Injectable } from '@angular/core';\n\nexport type InternalStateType = {\n  [key: string]: any\n};\n\n@Injectable()\nexport class AppState {\n\n  public _state: InternalStateType = { };\n\n  // already return a clone of the current state\n  public get state() {\n    return this._state = this._clone(this._state);\n  }\n  // never allow mutation\n  public set state(value) {\n    throw new Error('do not mutate the `.state` directly');\n  }\n\n  public get(prop?: any) {\n    // use our state getter for the clone\n    const state = this.state;\n    return state.hasOwnProperty(prop) ? state[prop] : state;\n  }\n\n  public set(prop: string, value: any) {\n    // internally mutate our state\n    return this._state[prop] = value;\n  }\n\n  private _clone(object: InternalStateType) {\n    // simple object clone\n    return JSON.parse(JSON.stringify( object ));\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/tslint-loader??ref--7-0!./src/app/app.service.ts","// Angular 2\nimport {\n  enableDebugTools,\n  disableDebugTools\n} from '@angular/platform-browser';\nimport {\n  ApplicationRef,\n  enableProdMode\n} from '@angular/core';\n// Environment Providers\nlet PROVIDERS: any[] = [\n  // common env directives\n];\n\n// Angular debug tools in the dev console\n// https://github.com/angular/angular/blob/86405345b781a9dc2438c0fbe3e9409245647019/TOOLS_JS.md\nlet _decorateModuleRef = <T>(value: T): T => { return value; };\n\nif ('production' === ENV) {\n  enableProdMode();\n\n  // Production\n  _decorateModuleRef = (modRef: any) => {\n    disableDebugTools();\n\n    return modRef;\n  };\n\n  PROVIDERS = [\n    ...PROVIDERS,\n    // custom providers in production\n  ];\n\n} else {\n\n  _decorateModuleRef = (modRef: any) => {\n    const appRef = modRef.injector.get(ApplicationRef);\n    const cmpRef = appRef.components[0];\n\n    let _ng = (<any> window).ng;\n    enableDebugTools(cmpRef);\n    (<any> window).ng.probe = _ng.probe;\n    (<any> window).ng.coreTokens = _ng.coreTokens;\n    return modRef;\n  };\n\n  // Development\n  PROVIDERS = [\n    ...PROVIDERS,\n    // custom providers in development\n  ];\n\n}\n\nexport const decorateModuleRef = _decorateModuleRef;\n\nexport const ENV_PROVIDERS = [\n  ...PROVIDERS\n];\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/tslint-loader??ref--7-0!./src/app/environment.ts","export * from './home.component';\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/tslint-loader??ref--7-0!./src/app/home/index.ts","export * from './no-content.component';\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/tslint-loader??ref--7-0!./src/app/no-content/index.ts","function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 391;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src async\n// module id = 391\n// module chunks = 1","// App\nexport * from './app.module';\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/tslint-loader??ref--7-0!./src/app/index.ts","/*\n * Angular 2 decorators and services\n */\nimport {\n  Component,\n  OnInit,\n  ViewEncapsulation\n} from '@angular/core';\nimport { AppState } from './app.service';\n\n/*\n * App Component\n * Top Level Component\n */\n@Component({\n  selector: 'app',\n  encapsulation: ViewEncapsulation.None,\n  styles: [\n    require('./app.component.css')\n  ],\n  template: `\n    \n    <main>\n      <router-outlet></router-outlet>\n    </main>\n\n    \n\n    \n  `\n})\nexport class AppComponent implements OnInit {\n  public angularclassLogo = 'assets/img/angularclass-avatar.png';\n  public name = 'Angular 2 Webpack Starter';\n  public url = 'https://twitter.com/AngularClass';\n\n  constructor(\n    public appState: AppState\n  ) {}\n\n  public ngOnInit() {\n    console.log('Initial App State', this.appState.state);\n  }\n\n}\n\n/*\n * Please review the https://github.com/AngularClass/angular2-examples/ repo for\n * more angular app examples that you may copy/paste\n * (The examples may not be updated as quickly. Please open an issue on github for us to update it)\n * For help or questions please contact us at @AngularClass on twitter\n * or our chat on Slack at https://AngularClass.com/slack-join\n */\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/tslint-loader??ref--7-0!./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport {\n  NgModule,\n  ApplicationRef\n} from '@angular/core';\nimport {\n  removeNgStyles,\n  createNewHosts,\n  createInputTransfer\n} from '@angularclass/hmr';\nimport {\n  RouterModule,\n  PreloadAllModules\n} from '@angular/router';\n\n/*\n * Platform and Environment providers/directives/pipes\n */\nimport { ENV_PROVIDERS } from './environment';\nimport { ROUTES } from './app.routes';\n// App is our top level component\nimport { AppComponent } from './app.component';\nimport { APP_RESOLVER_PROVIDERS } from './app.resolver';\nimport { AppState, InternalStateType } from './app.service';\nimport { HomeComponent } from './home';\n\nimport { NoContentComponent } from './no-content';\nimport { XLargeDirective } from './home/x-large';\n\nimport '../styles/styles.scss';\nimport '../styles/headings.css';\n\n// Application wide providers\nconst APP_PROVIDERS = [\n  ...APP_RESOLVER_PROVIDERS,\n  AppState\n];\n\ntype StoreType = {\n  state: InternalStateType,\n  restoreInputValues: () => void,\n  disposeOldHosts: () => void\n};\n\n/**\n * `AppModule` is the main entry point into Angular2's bootstraping process\n */\n@NgModule({\n  bootstrap: [ AppComponent ],\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    NoContentComponent,\n    XLargeDirective\n  ],\n  imports: [ // import Angular's modules\n    BrowserModule,\n    FormsModule,\n    HttpModule,\n    RouterModule.forRoot(ROUTES, { useHash: true, preloadingStrategy: PreloadAllModules })\n  ],\n  providers: [ // expose our Services and Providers into Angular's dependency injection\n    ENV_PROVIDERS,\n    APP_PROVIDERS\n  ]\n})\nexport class AppModule {\n\n  constructor(\n    public appRef: ApplicationRef,\n    public appState: AppState\n  ) {}\n\n  public hmrOnInit(store: StoreType) {\n    if (!store || !store.state) {\n      return;\n    }\n    console.log('HMR store', JSON.stringify(store, null, 2));\n    // set state\n    this.appState._state = store.state;\n    // set input values\n    if ('restoreInputValues' in store) {\n      let restoreInputValues = store.restoreInputValues;\n      setTimeout(restoreInputValues);\n    }\n\n    this.appRef.tick();\n    delete store.state;\n    delete store.restoreInputValues;\n  }\n\n  public hmrOnDestroy(store: StoreType) {\n    const cmpLocation = this.appRef.components.map((cmp) => cmp.location.nativeElement);\n    // save state\n    const state = this.appState._state;\n    store.state = state;\n    // recreate root elements\n    store.disposeOldHosts = createNewHosts(cmpLocation);\n    // save input values\n    store.restoreInputValues  = createInputTransfer();\n    // remove styles\n    removeNgStyles();\n  }\n\n  public hmrAfterDestroy(store: StoreType) {\n    // display new elements\n    store.disposeOldHosts();\n    delete store.disposeOldHosts;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/tslint-loader??ref--7-0!./src/app/app.module.ts","import { Resolve, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/observable/of';\n\n@Injectable()\nexport class DataResolver implements Resolve<any> {\n  public resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    return Observable.of({ res: 'I am data'});\n  }\n}\n\n// an array of services to resolve routes with data\nexport const APP_RESOLVER_PROVIDERS = [\n  DataResolver\n];\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/tslint-loader??ref--7-0!./src/app/app.resolver.ts","import { Routes } from '@angular/router';\nimport { HomeComponent } from './home';\n\nimport { NoContentComponent } from './no-content';\n\nimport { DataResolver } from './app.resolver';\n\nexport const ROUTES: Routes = [\n  { path: '',      component: HomeComponent },\n  { path: 'home',  component: HomeComponent },\n \n  { path: '**',    component: NoContentComponent },\n];\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/tslint-loader??ref--7-0!./src/app/app.routes.ts","import {\n  Component,\n  OnInit\n} from '@angular/core';\n\nimport { AppState } from '../app.service';\nimport { Title } from './title';\nimport { XLargeDirective } from './x-large';\n\n@Component({\n  // The selector is what angular internally uses\n  // for `document.querySelectorAll(selector)` in our index.html\n  // where, in this case, selector is the string 'home'\n  selector: 'home',  // <home></home>\n  // We need to tell Angular's Dependency Injection which providers are in our app.\n  providers: [\n    Title\n  ],\n  // Our list of styles in our component. We may add more to compose many styles together\n  styles: [ require('./home.component.css') ],\n  // Every Angular template is first compiled by the browser before Angular runs it's compiler\n  template: require('./home.component.html')\n})\nexport class HomeComponent implements OnInit {\n  // Set our default values\n  public localState = { value: '' };\n  // TypeScript public modifiers\n  constructor(\n    public appState: AppState,\n    public title: Title\n  ) {}\n\n  public ngOnInit() {\n    console.log('hello `Home` component');\n    // this.title.getData().subscribe(data => this.data = data);\n  }\n\n  public submitState(value: string) {\n    console.log('submitState', value);\n    this.appState.set('value', value);\n    this.localState.value = '';\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/tslint-loader??ref--7-0!./src/app/home/home.component.ts","export * from './title.service';\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/tslint-loader??ref--7-0!./src/app/home/title/index.ts","import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\n\n@Injectable()\nexport class Title {\n\n  public value = 'Angular 2';\n\n  constructor(\n    public http: Http\n  ) {}\n\n  public getData() {\n    console.log('Title#getData(): Get Data');\n    // return this.http.get('/assets/data.json')\n    // .map(res => res.json());\n    return {\n      value: 'AngularClass'\n    };\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/tslint-loader??ref--7-0!./src/app/home/title/title.service.ts","export * from './x-large.directive';\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/tslint-loader??ref--7-0!./src/app/home/x-large/index.ts","import {\n  Component,\n  Directive,\n  ElementRef,\n  Renderer\n} from '@angular/core';\n/*\n * Directive\n * XLarge is a simple directive to show how one is made\n */\n@Directive({\n  selector: '[x-large]' // using [ ] means selecting attributes\n})\nexport class XLargeDirective {\n  constructor(\n    public element: ElementRef,\n    public renderer: Renderer\n  ) {\n    // simple DOM manipulation to set font size to x-large\n    // `nativeElement` is the direct reference to the DOM element\n    // element.nativeElement.style.fontSize = 'x-large';\n\n    // for server/webworker support use the renderer\n    renderer.setElementStyle(element.nativeElement, 'fontSize', 'x-large');\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/tslint-loader??ref--7-0!./src/app/home/x-large/x-large.directive.ts","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'no-content',\n  template: `\n    <div>\n      <h1>404: page missing</h1>\n    </div>\n  `\n})\nexport class NoContentComponent {\n\n}\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/tslint-loader??ref--7-0!./src/app/no-content/no-content.component.ts","/*\r\n * Angular bootstraping\r\n */\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\nimport { decorateModuleRef } from './app/environment';\r\nimport { bootloader } from '@angularclass/hmr';\r\n/*\r\n * App Module\r\n * our top level module that holds all of our components\r\n */\r\nimport { AppModule } from './app';\r\n\r\n/*\r\n * Bootstrap our Angular app with a top level NgModule\r\n */\r\nexport function main(): Promise<any> {\r\n  return platformBrowserDynamic()\r\n    .bootstrapModule(AppModule)\r\n    .then(decorateModuleRef)\r\n    .catch((err) => console.error(err));\r\n}\r\n\r\n// needed for hmr\r\n// in prod this is replace for document ready\r\nbootloader(main);\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/tslint-loader??ref--7-0!./src/main.browser.ts","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"html, body{\\n  height: 100%;\\n  font-family: Arial, Helvetica, sans-serif\\n}\\n\\na.active {\\n  background-color: gray;\\n}\\n\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader!./src/app/app.component.css\n// module id = 678\n// module chunks = 1","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"/*styles for home content only*/\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader!./src/app/home/home.component.css\n// module id = 679\n// module chunks = 1","// removed by extract-text-webpack-plugin\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/styles/headings.css\n// module id = 680\n// module chunks = 1","// removed by extract-text-webpack-plugin\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/styles/styles.scss\n// module id = 681\n// module chunks = 1","module.exports = \"<div>\\n  <h1 x-large class=\\\"sample-content\\\">Hello Sandeep</h1>\\n\\n\\n\\n  <div>\\n    <h4>Local State</h4>\\n\\n    <form (ngSubmit)=\\\"submitState(localState.value)\\\" autocomplete=\\\"off\\\">\\n\\n      <input\\n        [value]=\\\"localState.value\\\"\\n        (input)=\\\"localState.value = $event.target.value\\\"\\n        placeholder=\\\"add \\\"\\n        autofocus>\\n\\n      <button>Submit Value</button>\\n    </form>\\n    \\n\\n  </div>\\n\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/home/home.component.html\n// module id = 682\n// module chunks = 1","\n        var result = require(\"!!../../node_modules/css-loader/index.js!./app.component.css\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = 700\n// module chunks = 1","\n        var result = require(\"!!../../../node_modules/css-loader/index.js!./home.component.css\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/home/home.component.css\n// module id = 701\n// module chunks = 1"],"mappings":";A;;;;;;;;;;AAAA;AAOA;AADA;AAGA;AA0BA;AAvBA;AADA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAJA;AAMA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AA5BA;AADA;AACA;AAAA;;;;;;;;;ACPA;AAAA;AAAA;AAAA;AAAA;AACA;AAIA;AAIA;AACA;AAIA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAKA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAKA;AAEA;AAEA;;;;;;;;;ACxDA;AAAA;AAAA;;;;;;;;;ACAA;AAAA;AAAA;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACNA;AAAA;AAAA;AACA;;;;;;;;;;;;;;ACDA;;AAEA;AACA;AAKA;AAEA;;;AAGA;AAkBA;AAKA;AACA;AALA;AACA;AACA;AAIA;AAEA;AACA;AACA;AAEA;AAAA;AAbA;AAjBA;AACA;AACA;AACA;AACA;AACA;AACA;AAUA;AAOA;AANA;AAAA;AAeA;;;;;;AAMA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpDA;AACA;AACA;AACA;AAIA;AAKA;AAKA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAQA;;AAEA;AAoBA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAAA;AA5CA;AAnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAJA;AAAA;;;;;;;;;;;;;;;;;;ACnEA;AACA;AACA;AAGA;AAAA;AAIA;AAHA;AACA;AACA;AACA;AAAA;AAJA;AADA;AACA;AAAA;AAMA;AACA;AACA;AACA;;;;;;;;;ACdA;AAAA;AAAA;AAAA;AAEA;AAIA;AACA;AACA;AAEA;AACA;;;;;;;;;;;;;;;ACZA;AAKA;AACA;AAiBA;AAGA;AACA;AACA;AACA;AALA;AACA;AAKA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAnBA;AAdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AANA;AAAA;;;;;;;;;ACvBA;AAAA;AAAA;;;;;;;;;;;;;;ACAA;AACA;AAGA;AAIA;AACA;AAHA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAjBA;AADA;AAMA;AALA;AAAA;;;;;;;;;ACJA;AAAA;AAAA;;;;;;;;;;;;;ACAA;AAMA;;;AAGA;AAIA;AACA;AAIA;AACA;AACA;AALA;AACA;AAMA;AACA;AACA;AACA;AAAA;AAZA;AAHA;AACA;AACA;AAGA;AACA;AAHA;AAAA;;;;;;;;;;;;;ACbA;AAUA;AAAA;AAEA;AAAA;AAAA;AAFA;AARA;AACA;AACA;AAKA;AACA;AAAA;;;;;;;;;ACVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACPA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;A","sourceRoot":""}